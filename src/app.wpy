<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}

.card {
  margin: 0 20rpx;
  box-shadow: 0px 0px 20px 0px rgba(8, 10, 36, 0.1);
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/card',
      'pages/home',
      'pages/personal',
      'pages/authorized',
      'pages/disclaimer',
      'pages/gift',
      'pages/activityRule',
      'pages/address',
      'pages/index'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#ffffff',
      navigationBarTitleText: '即客行周年庆',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      color: '#888888',
      selectedColor: '#0dfcf4',
      backgroundColor: '#ffffff',
      list: [
        {
          pagePath: 'pages/home',
          text: '首页',
          iconPath: 'assets/img/tab_home_nor.png',
          selectedIconPath: 'assets/img/tab_home_sel.png'
        },
        {
          pagePath: 'pages/card',
          text: '卡片',
          iconPath: 'assets/img/tab_card_nor.png',
          selectedIconPath: 'assets/img/tab_card_sel.png'
        },
        {
          pagePath: 'pages/personal',
          text: '我的',
          iconPath: 'assets/img/tab_user_nor.png',
          selectedIconPath: 'assets/img/tab_user_sel.png'
        }
      ]
    },
    // components
    usingComponents: {
      'van-tabbar': '../components/vant/tabbar/index',
      'van-tabbar-item': '../components/vant/tabbar-item/index'
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      cb && cb(this.globalData.userInfo)
    }
    wx.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      },
      fail (err) {
        console.log(err)
        wx.redirectTo({
          url: 'authorized'
        })
      }
    })
  }
}
</script>
